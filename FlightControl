package org.prog.airport;

import org.prog.exceptions.PlaneNotFoundException;

import java.util.ArrayList;

public class FlightControl {

    final static int MAX_AIRPORT_CLIENTS = 8;
    private final ArrayList<Plane> planes;

    private final ArrayList<Passenger> passengers;
    
    public FlightControl(ArrayList<Plane> planes) {
        this.planes = planes;
        passengers = new ArrayList<>();
        }

        public ArrayList<Passenger> getPassengers(){
        return this.passengers;
        }
        
         public void setPlaneDestination(String flightId, String destination) throws PlaneNotFoundException{
        Plane plane = getPlaneByFlightId(flightId);
        plane.setFlightDestination(destination);
    }

    public void boardPassenger(Passenger passenger) throws PlaneNotFoundException{
      
      Plane plane = getPlaneByFlightId(passenger.getFlightId());
        plane.boardPassenger(passenger.getName(), passenger.getSitId());

       }
       
        private Plane getPlaneByFlightId(String flightId) throws PlaneNotFoundException {
        for (Plane inspectedplane : planes) {  
           if (inspectedplane.getFlightId().equals(flightId)){
               return inspectedplane;
           }
        }

  
        throw new PlaneNotFoundException();
    }
    public void registerPassenger(Passenger passenger) {
        passengers.add(passenger);
    }

}
